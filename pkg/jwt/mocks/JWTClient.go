// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	jwt "newservice/pkg/jwt"

	mock "github.com/stretchr/testify/mock"
)

// JWTClient is an autogenerated mock type for the JWTClient type
type JWTClient struct {
	mock.Mock
}

// CreateToken provides a mock function with given fields: params
func (_m *JWTClient) CreateToken(params *jwt.CreateTokenParams) (*jwt.CreateTokenResponse, error) {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for CreateToken")
	}

	var r0 *jwt.CreateTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*jwt.CreateTokenParams) (*jwt.CreateTokenResponse, error)); ok {
		return rf(params)
	}
	if rf, ok := ret.Get(0).(func(*jwt.CreateTokenParams) *jwt.CreateTokenResponse); ok {
		r0 = rf(params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jwt.CreateTokenResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*jwt.CreateTokenParams) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDataFromToken provides a mock function with given fields: params
func (_m *JWTClient) GetDataFromToken(params *jwt.GetDataFromTokenParams) (*jwt.GetDataFromTokenResponse, error) {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for GetDataFromToken")
	}

	var r0 *jwt.GetDataFromTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*jwt.GetDataFromTokenParams) (*jwt.GetDataFromTokenResponse, error)); ok {
		return rf(params)
	}
	if rf, ok := ret.Get(0).(func(*jwt.GetDataFromTokenParams) *jwt.GetDataFromTokenResponse); ok {
		r0 = rf(params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jwt.GetDataFromTokenResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*jwt.GetDataFromTokenParams) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ValidateToken provides a mock function with given fields: params
func (_m *JWTClient) ValidateToken(params *jwt.ValidateTokenParams) (bool, error) {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for ValidateToken")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(*jwt.ValidateTokenParams) (bool, error)); ok {
		return rf(params)
	}
	if rf, ok := ret.Get(0).(func(*jwt.ValidateTokenParams) bool); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(*jwt.ValidateTokenParams) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewJWTClient creates a new instance of JWTClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJWTClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *JWTClient {
	mock := &JWTClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
